@using Microsoft.AspNetCore.Identity
@using WastelandRifleworks.Services.Data.Intefaces
@using WastelandRifleworks.Web.Infrastructure.Extensions
@using WastelandRilfeworks.Data.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IEngineerService EngineerService
@{

	bool isEngineer = await EngineerService.EngineerExistsByUserIdAsync(this.User.GetId()!);

	string? engineerId = await EngineerService.GetEnginnerIdByUserIdAsync(this.User.GetId()!);

	string? username = await EngineerService.GetEnginnerUsernameByEnginnerIdAsync(engineerId!);
	

}
<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		
		@if (isEngineer)
		{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @username</a>
		</li>
		}
		@if (!isEngineer)
		{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!.Split('@')[0]!</a>
		</li>
		}
		
		@if (!isEngineer)
		{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="Engineer" asp-action="Become">Become an Engineer</a>
		</li>
		}
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
		</li>
	}
</ul>
